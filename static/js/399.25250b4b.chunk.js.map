{"version":3,"file":"static/js/399.25250b4b.chunk.js","mappings":"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","sources":["constans/Status.ts","components/TrendingMovies/TrendingMovies.styled.tsx","components/TrendingMovies/TrendingMovies.tsx","pages/HomePage/HomePage.styled.tsx","pages/HomePage/HomePage.tsx","services/Movies.services.ts"],"sourcesContent":[" import {Status} from 'types/typeStatus'\n\nexport const STATUS: Status = {\n    idle: 'idle',\n    loading: 'loading',\n    success: 'success',\n    error: 'error',\n}","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 4px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item } from './TrendingMovies.styled';\nimport { Movie } from 'types/typeMovie';\n\ninterface IProps {\n  movies: Movie[]\n}\n\nconst TrendingMovies = ({ movies }: IProps) => {\n  const location = useLocation();\n  console.log(location)\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <Link to={`movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n\nexport default TrendingMovies;\n","import styled from 'styled-components';\nexport const Wrapper = styled.div`\n  padding: 24px 48px;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchRequest } from 'services/Movies.services';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport { STATUS } from 'constans/Status';\nimport { Wrapper, Title } from './HomePage.styled';\nimport { Movie } from 'types/typeMovie';\nimport { IResponse } from 'types/typeFetchMovie';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState<Movie [] | []>([]);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  useEffect(() => {\n    const getMovies = async (): Promise<void> => {\n      setStatus(STATUS.loading);\n      try {\n        const data = await fetchRequest<IResponse>({URL:`trending/movie/day`});\n        onResolve(data);\n      } catch (error) {\n        console.log(error);\n        setStatus(STATUS.error);\n      }\n    };\n    getMovies();\n  }, []);\n  const onResolve = ({results}:IResponse): void => {\n    const movieTitles: Movie[] = results.map(({ id, original_title: title}) => ({\n      id,\n      title,\n    }));\n    setMovies(movieTitles);\n    setStatus(STATUS.success);\n  };\n  return (\n    <Wrapper>\n      {status === STATUS.error && <Title>NOT FOUND</Title>}\n      {status === STATUS.loading && (\n        <>\n          <Title>Trending today</Title>\n          <p>Loading...</p>\n        </>\n      )}\n      {status === STATUS.success && (\n        <>\n          <Title>Trending today</Title>\n          <TrendingMovies movies={movies} />\n        </>\n      )}\n    </Wrapper>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\ninterface IRequest {\n    URL: string,\n    searchName?: string,\n}\n\nconst moviesApi = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n});\nconst ApiKey = '51cea464d1158e7d34cacf903de39a42';\n\nexport const fetchRequest = async<T>(request: IRequest): Promise<T> => {\n    const { data } = await moviesApi.get<T>(request.URL, {\n        params: {\n            api_key: ApiKey,\n            query: request.searchName,\n        },\n    });\n    return data;\n};\n\n"],"names":["STATUS","idle","loading","success","error","Item","styled","_templateObject","_taggedTemplateLiteral","_ref","movies","location","useLocation","console","log","_jsx","children","map","_ref2","id","title","Link","to","concat","state","from","Wrapper","Title","_templateObject2","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","status","setStatus","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","fetchRequest","URL","sent","onResolve","t0","stop","apply","arguments","movieTitles","results","_ref3","original_title","_jsxs","_Fragment","TrendingMovies","moviesApi","axios","baseURL","request","_yield$moviesApi$get","get","params","api_key","query","searchName","abrupt","_x"],"sourceRoot":""}